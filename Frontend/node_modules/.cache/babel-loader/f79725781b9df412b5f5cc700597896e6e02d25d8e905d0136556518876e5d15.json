{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ian.silva\\\\Desktop\\\\Tarefas\\\\lista_de_tarefas\\\\Frontend\\\\src\\\\components\\\\ListaNotas.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DivListaNotas, Row, Button } from \"./styles\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListaNotas = ({\n  notas\n}) => {\n  _s();\n  const {\n    secaoId\n  } = useParams();\n  const [listaNotas, setListaNotas] = useState([{\n    idsecao: '1',\n    notas: ['Nota 1', 'Nota 2', 'Nota 3', 'Nota 4', 'Nota 5', 'Nota 6']\n  }, {\n    idsecao: '2',\n    notas: ['Nota 1', 'Nota 2', 'Nota 3', 'Nota 4', 'Nota 5', 'Nota 6', 'Nota 7', 'Nota 8']\n  }]);\n  return /*#__PURE__*/_jsxDEV(DivListaNotas, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Notas da se\\xE7\\xE3o \", secaoId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/cadastronotas\",\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"+ Nova Nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), listaNotas.filter(nota => nota.idsecao === secaoId).map(({\n      notas\n    }) => {\n      return notas.map(nota => {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          children: nota\n        }, nota, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this);\n      });\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(ListaNotas, \"Tn4ENx9TJRtcTcvJ0DcGoRy5D3o=\", false, function () {\n  return [useParams];\n});\n_c = ListaNotas;\nvar _c;\n$RefreshReg$(_c, \"ListaNotas\");","map":{"version":3,"names":["React","useState","DivListaNotas","Row","Button","Link","useParams","jsxDEV","_jsxDEV","ListaNotas","notas","_s","secaoId","listaNotas","setListaNotas","idsecao","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","textDecoration","filter","nota","map","_c","$RefreshReg$"],"sources":["C:/Users/ian.silva/Desktop/Tarefas/lista_de_tarefas/Frontend/src/components/ListaNotas.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DivListaNotas, Row, Button } from \"./styles\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport const ListaNotas = ({ notas }) => {\r\n    const { secaoId } = useParams();\r\n    const [listaNotas, setListaNotas] = useState([\r\n        {\r\n            idsecao: '1',\r\n            notas: ['Nota 1', 'Nota 2', 'Nota 3', 'Nota 4', 'Nota 5', 'Nota 6']\r\n        },\r\n        {\r\n            idsecao: '2',\r\n            notas: ['Nota 1', 'Nota 2', 'Nota 3', 'Nota 4', 'Nota 5', 'Nota 6', 'Nota 7', 'Nota 8']\r\n        },\r\n    ]);\r\n\r\n    return (\r\n        <DivListaNotas>\r\n            <h1>Notas da seção {secaoId}</h1>\r\n            <Link to=\"/cadastronotas\" style={{ textDecoration: 'none' }}>\r\n                <Button>+ Nova Nota</Button>\r\n            </Link>\r\n            {listaNotas.filter((nota) => nota.idsecao === secaoId).map(({ notas }) => {\r\n                return (\r\n                    notas.map((nota) => {\r\n                        return (\r\n                            <Row key={nota}>{nota}</Row>\r\n                        );\r\n                    })\r\n                );\r\n            })}\r\n        </DivListaNotas>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,GAAG,EAAEC,MAAM,QAAQ,UAAU;AACrD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CACzC;IACIc,OAAO,EAAE,GAAG;IACZL,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;EACtE,CAAC,EACD;IACIK,OAAO,EAAE,GAAG;IACZL,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;EAC1F,CAAC,CACJ,CAAC;EAEF,oBACIF,OAAA,CAACN,aAAa;IAAAc,QAAA,gBACVR,OAAA;MAAAQ,QAAA,GAAI,uBAAe,EAACJ,OAAO;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCZ,OAAA,CAACH,IAAI;MAACgB,EAAE,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAAEC,cAAc,EAAE;MAAO,CAAE;MAAAP,QAAA,eACxDR,OAAA,CAACJ,MAAM;QAAAY,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACNP,UAAU,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,OAAO,KAAKH,OAAO,CAAC,CAACc,GAAG,CAAC,CAAC;MAAEhB;IAAM,CAAC,KAAK;MACtE,OACIA,KAAK,CAACgB,GAAG,CAAED,IAAI,IAAK;QAChB,oBACIjB,OAAA,CAACL,GAAG;UAAAa,QAAA,EAAaS;QAAI,GAAXA,IAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAEpC,CAAC,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAExB,CAAC;AAAAT,EAAA,CA9BYF,UAAU;EAAA,QACCH,SAAS;AAAA;AAAAqB,EAAA,GADpBlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}